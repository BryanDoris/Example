local Library = {}

function Library:CreateTab(tabname)
	local JerioUILibrary = Instance.new("ScreenGui")
	local Window = Instance.new("Frame")
	local JerioGrid = Instance.new("UIGridLayout")
	local Tab = Instance.new("Frame")
	local ArrowButton = Instance.new("TextButton")
	local TITLE = Instance.new("TextLabel")
	
	JerioUILibrary.Name = "JerioUILibrary"
	JerioUILibrary.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
	JerioUILibrary.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	Window.Name = "Window"
	Window.Parent = JerioUILibrary
	Window.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Window.BackgroundTransparency = 1.000
	Window.BorderSizePixel = 0
	Window.Size = UDim2.new(1, 0, 1, 0)
	
	JerioGrid.Name = "JerioGrid"
	JerioGrid.Parent = JerioUILibrary
	JerioGrid.HorizontalAlignment = Enum.HorizontalAlignment.Center
	JerioGrid.SortOrder = Enum.SortOrder.LayoutOrder
	JerioGrid.CellSize = UDim2.new(0, 220, 0, 30)
	
	Tab.Name = "Tab"
	Tab.Parent = Window
	Tab.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
	Tab.BorderSizePixel = 0
	Tab.Position = UDim2.new(0.00756142335, 0, 0.0250297859, 0)
	Tab.Size = UDim2.new(0, 220, 0, 30)

	ArrowButton.Name = "ArrowButton"
	ArrowButton.Parent = Tab
	ArrowButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ArrowButton.BackgroundTransparency = 1.000
	ArrowButton.Position = UDim2.new(0.862272739, 0, 0, 0)
	ArrowButton.Size = UDim2.new(0, 30, 0, 30)
	ArrowButton.Font = Enum.Font.GothamSemibold
	ArrowButton.Text = ">"
	ArrowButton.TextColor3 = Color3.fromRGB(220, 220, 220)
	ArrowButton.TextSize = 20.000

	TITLE.Name = "TITLE"
	TITLE.Parent = Tab
	TITLE.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TITLE.BackgroundTransparency = 1.000
	TITLE.BorderSizePixel = 0
	TITLE.Size = UDim2.new(0, 190, 0, 30)
	TITLE.Font = Enum.Font.ArialBold
	TITLE.Text = tabname or "UI Remake By Jerio"
	TITLE.TextColor3 = Color3.fromRGB(220, 220, 220)
	TITLE.TextSize = 14.000
	
	local function IJDYNZ_fake_script() -- ArrowButton.ArrowButtonScript 
		local script = Instance.new('LocalScript', ArrowButton)

		local opened = false
		script.Parent.MouseButton1Click:Connect(function()
			if opened == false then
				script.Parent.Rotation = 90
				wait(1)
				opened = true
			elseif opened == true then
				script.Parent.Rotation = 0
				wait(1)
				opened = false
			end
		end)
	end
	coroutine.wrap(IJDYNZ_fake_script)()
	local function PLBDQLT_fake_script() -- Tab.Draggable 
		local script = Instance.new('LocalScript', Tab)

		local UserInputService = game:GetService("UserInputService")

		local gui = script.Parent

		local dragging
		local dragInput
		local dragStart
		local startPos

		local function update(input)
			local delta = input.Position - dragStart
			gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end

		gui.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				dragging = true
				dragStart = input.Position
				startPos = gui.Position

				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						dragging = false
					end
				end)
			end
		end)

		gui.InputChanged:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
				dragInput = input
			end
		end)

		UserInputService.InputChanged:Connect(function(input)
			if input == dragInput and dragging then
				update(input)
			end
		end)
	end
	coroutine.wrap(PLBDQLT_fake_script)()
end

return Library
